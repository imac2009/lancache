# Tera Game Updates
server {
        listen lancache-tera deferred default;
        server_name tera _;
        # DNS entries: lancache-origin akamai.cdn.ea.com
        access_log /srv/lancache/logs/lancache-tera-access.log main buffer=128k flush=1m;
        error_log /srv/lancache/logs/lancache-tera-error.log;
        # Origin Node
        include lancache/resolver;
        location / {
                # Currently Origin: * Blocks caching so we have to 
                # ignore Expires and Cache-Control. * Puts 
                # sauth=<authkey> in the query string so we use $uri 
                # instead of $request_uri
                #   in the cache key. * Uses a single archive file with 
                #range requests and refuses requests to download the 
                #entire file. To combat this we pass-through the Range 
                #headers and include the range to the cache key and 
                #allow caching of 206 responses. Eproxy_ignore_headers 
                #Expires Cache-Control; proxy_set_header Range 
                #$http_range; proxy_set_header If-Range $http_if_range; 
                #proxy_cache_key "$server_name$uri $http_range"; 
                #proxy_cache_valid 206 90d; proxy_read_timeout 150;
                # Use Origin cache proxy_cache origin; include 
                # lancache/proxy-cache; Request Slicing
    # Supported in nginx 1.9.8
    
    set $no_cache "";
    if ($request_uri ~* \.patchmanifest$) {
    set $no_cache "1";
    }
    proxy_no_cache $no_cache;
    proxy_cache_bypass $no_cache;
    
    proxy_bind 192.168.202.3;
    slice 1m;
    # Cache Location
    proxy_cache tera;
    # Cache Settings
    proxy_ignore_headers Expires Cache-Control;
    proxy_cache_key $uri$slice_range;
    proxy_cache_valid 200 206 120d;
    proxy_set_header Range $slice_range;
    # Use proxy_cache method
    include lancache/proxy-cache;
    #include lancache/proxy-pass;
        }
}
